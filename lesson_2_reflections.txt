Q: What happens when you initialize a repository? Why do you need to do it?

A: To actually use the features of git version-control and keep track of changes in files, a repository is required.
   Hence when we initialize a repository, we enable the version-control feature to track changes in files within that repository.
   To make sure if a repository is created, one should enable viewing hidden files and find for folder named ".git" within the folder/directory
   in which a repository is made.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: Staging area is a sort of memory where files which need to be tracked are placed, though the files will 
   remain in the repository but their history will be recorded. Whereas the files that are just placed in 
   repository/working directory and aren't added to staging area, won't be able to be tracked.

   Thus in short if version-control is to be used on any file, it needs to be added in staging area first and 
   not just in working directory/repository.

Q: How can you use the staging area to make sure you have one commit per logical change?

A: To make sure that there's one commit per logical change, one should first compare the working directory
   with staging area and then add the modified file in staging area or add the file in staging area and then
   compare file in staging area with most recent commit to make sure there have been some logical changes in file.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: Creating branches might prove helpful when more than one version of a project is needed, for example: on basis of language,
   difficulty level, etc. 

   Branches would help developer in keeping different versions apart from each other and make changes in different versions
   which wouldn't effect other version and can progress further on their own tracks separately.

Q: How do the diagrams help you visualize the branch structure?

A: By creating diagrams, i can visualize the origin of each branch and what are the differences between each of them,
   i can also visualize the last common commit between those branches. In short diagrams help me prevent from getting puzzled
   and ending up in lockdown.